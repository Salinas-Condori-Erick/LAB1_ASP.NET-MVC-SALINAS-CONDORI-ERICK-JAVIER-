name: Construcción y despliegue de una aplicación ASP.NET MVC a Azure

env:
  AZURE_WEBAPP_NAME: upt-awa-750
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  DOTNET_VERSION: '8'

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Configurar .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Limpieza de carpetas bin y obj
      - name: Limpiar carpetas de compilación
        run: |
          find . -type d \( -name "bin" -o -name "obj" \) -exec rm -rf {} +
          echo "Carpetas bin y obj eliminadas correctamente."

      # Limpieza adicional con dotnet clean
      - name: Limpiar con dotnet clean
        run: |
          cd src
          dotnet clean

      # Restaurar paquetes
      - name: Restaurar los paquetes
        run: |
          cd src
          dotnet restore

      # Compilar el proyecto
      - name: Compilar el proyecto
        run: |
          cd src
          dotnet build

      # Instalar Scanner de SonarCloud
      - name: Instalar Scanner de SonarCloud
        run: |
          dotnet tool install --global dotnet-sonarscanner
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
        
      - name: Ejecutar escaneo de SonarCloud
        env:
          DOTNET_ROOT: /usr/share/dotnet
          PATH: /usr/share/dotnet:$PATH:$HOME/.dotnet/tools
        run: |
          cd src
          dotnet-sonarscanner begin \
            /k:"${{ secrets.SONAR_PROJECT }}" \
            /o:"${{ secrets.SONAR_ORG }}" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Publicar la aplicación localmente
        run: cd src && dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/publish

      - name: Subir el artefacto para el job de despliegue
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/publish

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Descargar el artefacto desde el job de construcción
        uses: actions/download-artifact@v4
        with:
          name: .net-app
          
      - name: Desplegar a Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          restart: true
